import React from 'react';
import { Box, Paper, Button, Typography } from '@mui/material';
import ReactMarkdown from 'react-markdown';
import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';
import { coy } from 'react-syntax-highlighter/dist/esm/styles/prism';
import { CopyToClipboard } from 'react-copy-to-clipboard';

const VulnerabilityReport = ({ vulnerabilities }) => {
  const getCodeFromMarkdown = (markdown) => {
    const codeMatch = markdown.match(/```([\s\S]*?)```/);
    return codeMatch ? codeMatch[1].trim() : '';
  };

  const codeText = getCodeFromMarkdown(vulnerabilities);

  return (
    <Paper elevation={3} sx={{ height: '400px', overflowY: 'scroll', padding: '10px', border: '1px solid #424242', borderRadius: '4px' }}>
      <Typography variant="h6">Result</Typography>
      <ReactMarkdown
        components={{
          code({ node, inline, className, children, ...props }) {
            const match = /language-(\w+)/.exec(className || '');
            return !inline && match ? (
              <SyntaxHighlighter style={coy} language={match[1]} PreTag="div" {...props}>
                {String(children).replace(/\n$/, '')}
              </SyntaxHighlighter>
            ) : (
              <code className={className} {...props}>
                {children}
              </code>
            );
          },
        }}
      >
        {vulnerabilities || 'Result will be displayed here.'}
      </ReactMarkdown>
      {vulnerabilities && (
        <Box mt={2} display="flex" justifyContent="center" position="relative" bottom="10px">
          <CopyToClipboard text={codeText}>
            <Button variant="contained" color="primary" sx={{ marginRight: '10px' }}>Copy Code</Button>
          </CopyToClipboard>
          <CopyToClipboard text={vulnerabilities}>
            <Button variant="contained" color="secondary">Copy All</Button>
          </CopyToClipboard>
        </Box>
      )}
    </Paper>
  );
};

export default VulnerabilityReport;
